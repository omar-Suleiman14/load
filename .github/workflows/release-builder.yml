name: Build Standalone Executables

on:
  release:
    types: [created]

jobs:
  build-executables:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    # --- THIS IS THE FIX ---
    # Grant the job permissions to write to the repository's contents (i.e., upload release assets)
    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller -r requirements.txt

      - name: Get FFmpeg Path
        id: ffmpeg_step
        shell: bash
        run: echo "ffmpeg_path=$(python -c 'import imageio_ffmpeg; print(imageio_ffmpeg.get_ffmpeg_exe())')" >> $GITHUB_OUTPUT

      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        shell: bash 
        run: |
          pyinstaller --onefile --name load-windows --add-data "${{ steps.ffmpeg_step.outputs.ffmpeg_path }};imageio_ffmpeg/binaries" main_cli.py

      - name: Build with PyInstaller (macOS & Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          OS_NAME=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
          pyinstaller --onefile --name load-$OS_NAME --add-data "${{ steps.ffmpeg_step.outputs.ffmpeg_path }}:imageio_ffmpeg/binaries" main_cli.py

      - name: Upload Windows Asset
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/load-windows.exe
          asset_name: load-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Asset
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/load-macos
          asset_name: load-macos
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Linux Asset
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/load-linux
          asset_name: load-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}